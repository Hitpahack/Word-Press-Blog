@{
	ViewData["Title"] = "Categories";
	var categories = ViewBag.categories;
}

@if (TempData["SuccessMessage"] != null)
{
	<div class="alert alert-success" id="successMessage">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
	<div class="alert alert-danger" id="errorMessage">@TempData["ErrorMessage"]</div>
}

<div class="row mb-3">
	<div class="col-md-12 d-flex justify-content-end">
		<form asp-action="Search" method="get" class="d-flex">
			<input type="text" name="searchTerm" class="form-control" placeholder="Search Categories..." value="@ViewBag.SearchTerm">
			<button type="submit" class="btn btn-primary mt-1 ml-2">Search</button>
		</form>
	</div>
</div>

<div class="row">
	<div class="col-md-4">
		<h4>Add New Category</h4>
		<form asp-action="AddCategory" method="post">
			<div class="form-group">
				<label>Name</label>
				<input type="text" name="Name" class="form-control" />
				<p>The name is how it appears on your site.</p>
			</div>
			<div class="form-group">
				<label>Slug</label>
				<input type="text" name="Slug" class="form-control" />
				<p>The “slug” is the URL-friendly version of the name. It is usually all lowercase and contains only letters, numbers, and hyphens.</p>
			</div>
			<div class="form-group">
				<label>Parent Category</label>
				<select name="ParentCategoryId" class="form-control">
					<option value="">None</option>
					@* @foreach (var category in parentCategories) *@
					@* { *@
					@*     <option value="@category.Id">@category.Name</option> *@
					@* } *@
				</select>
				<p>Categories, unlike tags, can have a hierarchy. You might have a Jazz category, and under that have children categories for Bebop and Big Band. Totally optional.</p>
			</div>

			<div class="form-group">
				<label>Description</label>
				<textarea name="Description" class="form-control"></textarea>
				<p>The description is not prominent by default; however, some themes may show it.</p>
			</div>
			<button type="submit" class="btn btn-primary mt-2">Add New Category</button>
		</form>
	</div>

	<div class="col-md-8">
		<div class="d-flex align-items-center">
			<select name="BulkAction" class="form-control me-2" style="width: 200px;">
				<option value="">Bulk Action</option>
				<option value="delete">Delete</option>
			</select> 
			<button type="submit" class="btn btn-primary ml-2">Apply</button>
		</div>
		<form asp-action="DeleteCategory" method="post">
			<table class="table table-bordered">
				<thead>
					<tr>
						<th><input type="checkbox" id="selectAll" /></th>
						<th>Name</th>
						<th>Description</th>
						<th>Slug</th>
						<th>Count</th>
					</tr>
				</thead>
				<tbody>
					@if (categories != null)
					{
						@foreach (var category in categories)
						{
							<tr>
								<td><input type="checkbox" name="categoryIds" value="@category.TermId" /></td>
								<td>
									@category.Name
									<div>
										<a href="@Url.Action("Edit", "Category", new { id = category.TermId })">Edit |</a>
										<a href="@Url.Action("QuickEdit", "Category", new { id = category.TermId })">Quick Edit |</a>
										<a href="@Url.Action("Details", "Category", new { id = category.TermId })">View |</a>
										<a href="@Url.Action("Delete", "Category", new { id = category.TermId })" onclick="return confirm('Are you sure you want to delete this category?')">Delete</a>
									</div>
								</td>
								<td>@category.Description</td>
								<td>@category.Slug</td>
								<td>@category.Count</td>
							</tr>
						}
					}
					else
					{
						<tr>
							<td colspan="5" class="text-center">No categories found.</td>
						</tr>
					}

				</tbody>

			</table>
			<div class="d-flex align-items-center">
				<select name="BulkAction" class="form-control me-2" style="width: 200px;">
					<option value="">Bulk Action</option>
					<option value="delete">Delete</option> 
				</select>
				<button type="submit" class="btn btn-primary ml-2">Apply</button>
			</div>
		</form>
	</div>
</div>

<script>
	document.getElementById("selectAll").addEventListener("click", function() {
		var checkboxes = document.querySelectorAll("input[name='categoryIds']");
		checkboxes.forEach(cb => cb.checked = this.checked);
	});

	document.addEventListener("DOMContentLoaded", function () {
		setTimeout(function () {
			var successAlert = document.getElementById("successMessage");
			if (successAlert) {
				successAlert.style.transition = "opacity 0.5s ease";
				successAlert.style.opacity = "0"; // Fade out
				setTimeout(() => successAlert.remove(), 500); // Remove from DOM after fade out
			}

			var errorAlert = document.getElementById("errorMessage");
			if (errorAlert) {
				errorAlert.style.transition = "opacity 0.5s ease";
				errorAlert.style.opacity = "0"; // Fade out
				setTimeout(() => errorAlert.remove(), 500); // Remove from DOM after fade out
			}
		}, 3000); // 3 seconds delay
	});

</script>
