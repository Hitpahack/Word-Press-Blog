@model List<UserDto>

@{
    ViewBag.Title = "Posts";
}
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <a href="@Url.Action("AddPost")" class="page-title-action">Add New Post</a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="custom-inline-box">
            <ul class="subsubsub">
                <li class="all">
                    <a href="" class="current" aria-current="page">All <span class="count">(17)</span></a> |
                </li>
                <li class="mine">
                    <a href="">
                        Mine <span class="count">(1)</span>
                    </a> |
                </li>
                <li class="publish">
                    <a href="">
                        Published
                        <span class="count">(12)</span>
                    </a> |
                </li>
                <li class="draft">
                    <a href="">
                        Drafts
                        <span class="count">(5)</span>
                    </a> |
                </li>
                <li class="pillar_content">
                    <a href="">Pillar Content <span class="count">(0)</span></a>
                </li>
            </ul>
            <p class="search-box">
                <label class="screen-reader-text" for="post-search-input">Search Posts:</label>
                <input type="search" id="post-search-input" name="s" value="">
                <input type="button" id="search-submit" class="button" value="Search Posts">
            </p>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="tablenav top">

            <div class="alignleft actions bulkactions">
                <label for="bulk-action-selector-top" class="screen-reader-text">
                    Select bulk
                    action
                </label>
                <select name="action" id="bulk-action-selector-top">
                    <option value="-1">Bulk actions</option>
                    <option value="edit" class="hide-if-no-js">Edit</option>
                    <option value="trash">Move to Trash</option>
                    <option value="rank_math_indexnow">Instant Indexing: Submit Pages</option>
                </select>
                <input type="submit" name="bulk_action" id="doaction" class="theme-button" value="Apply" />
            </div>
            <div class="alignleft actions">
                <label for="filter-by-date" class="screen-reader-text">Filter by date</label>
                <select name="m" id="dateFilter">
                   
                </select>
                <label class="screen-reader-text" for="cat">Filter by category</label>
                <select name="cat" id="categoryFilter" class="postform">
                    <option value="0">All Categories</option>
                    <option class="1" value="9">campassure</option>
                    <option class="1" value="8">International Travel Insurance</option>
                    <option class="1" value="7">Missionary Insurance</option>
                    <option class="1" value="5">Schengen Visa Insurance</option>
                    <option class="1" value="6">Student Visa Insurance</option>
                    <option class="1" value="4">Travel Insurance</option>
                    <option class="1" value="10">Travel Medical Insurance</option>
                    <option class="1" value="1">Uncategorized</option>
                    <option class="1" value="11">US Visitors Insurance</option>
                </select>
                <select name="seo-filter" id="rankFilter">
                    <option value="all" selected="selected">Rank Math</option>
                    <option value="good">SEO Score: Good</option>
                    <option value="ok">SEO Score: Ok</option>
                    <option value="bad">SEO Score: Bad</option>
                    
                </select>
                <input type="submit" name="filter_action" id="filterButton" class="theme-button"
                       value="Filter">
            </div>
            <br class="clear">
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="card-box">
            <div class="table-responsive">
                <table class="table table-centered m-0" id="post_list_datatable">
                    <thead class="thead-light">
                        <tr>
                            <td class="manage-column column-cb check-column">
                                <input id="" type="checkbox" />
                            </td>
                           @*  <th>Image</th> *@
                            <th>Title</th>
                            <th>
                                Category
                            </th>
                            <th class="sorted ">
                                <span>Author</span>
                                <span class="sorting-indicators">
                                    <span class="sorting-indicator asc" aria-hidden="true"></span>
                                    <span class="sorting-indicator desc" aria-hidden="true"></span>
                                </span>
                            </th>
                            <th class="sorted">
                                <span>Tags</span>
                                <span class="sorting-indicators">
                                    <span class="sorting-indicator asc" aria-hidden="true"></span>
                                    <span class="sorting-indicator desc" aria-hidden="true"></span>
                                </span>
                            </th>
                            <th>Status</th>
                            <th class="sorted">
                                <span>Date</span>
                                <span class="sorting-indicators">
                                    <span class="sorting-indicator asc" aria-hidden="true"></span>
                                    <span class="sorting-indicator desc" aria-hidden="true"></span>
                                </span>
                            </th>
                            <th>Action</th>
                            @* <th class="sorted table-col-small">
                                <span><i class="mdi mdi-dots-vertical"></i></span>
                                <span class="sorting-indicators">
                                    <span class="sorting-indicator asc" aria-hidden="true"></span>
                                    <span class="sorting-indicator desc" aria-hidden="true"></span>
                                </span>
                            </th>
                            <th class="sorted table-col-small">
                                <span><i class="mdi mdi-leaf"></i></span>
                                <span class="sorting-indicators">
                                    <span class="sorting-indicator asc" aria-hidden="true"></span>
                                    <span class="sorting-indicator desc" aria-hidden="true"></span>
                                </span>
                            </th>
                            <th class="sorted table-col-small">
                                <span><i class="mdi mdi-file-import"></i></span>
                                <span class="sorting-indicators">
                                    <span class="sorting-indicator asc" aria-hidden="true"></span>
                                    <span class="sorting-indicator desc" aria-hidden="true"></span>
                                </span>
                            </th>
                            <th class="sorted table-col-small">
                                <span><i class="mdi mdi-file-export"></i></span>
                                <span class="sorting-indicators">
                                    <span class="sorting-indicator asc" aria-hidden="true"></span>
                                    <span class="sorting-indicator desc" aria-hidden="true"></span>
                                </span>
                            </th> *@
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="tablenav-pages one-page">
    <span class="displaying-num">17 items</span>
    <span class="pagination-links">
        <span class="tablenav-pages-navspan button disabled"
              aria-hidden="true">«</span>
        <span class="tablenav-pages-navspan button disabled" aria-hidden="true">‹</span>
        <span class="paging-input">
            <label for="current-page-selector" class="screen-reader-text">
                Current
                Page
            </label><input class="current-page" id="current-page-selector" type="text" name="paged"
                           value="1" size="1" aria-describedby="table-paging"><span class="tablenav-paging-text">
                of
                <span class="total-pages">1</span>
            </span>
        </span>
        <span class="tablenav-pages-navspan button disabled" aria-hidden="true">›</span>
        <span class="tablenav-pages-navspan button disabled" aria-hidden="true">»</span>
    </span>
</div>
@section Styles{
    <link href="~/lib_npm/datatables.net-bs4/css/datatables.bootstrap4.min.css" rel="stylesheet" />
}
@section Scripts {
    <script src="~/lib_npm/datatables.net/js/jquery.datatables.min.js"></script>
    <script src="~/lib_npm/datatables.net-bs4/js/datatables.bootstrap4.min.js"></script>
    <script>
        function generateDateFilter(startYear, elementid) {
            const currentDate = new Date();
            const currentYear = currentDate.getFullYear();
            const currentMonth = currentDate.getMonth() + 1; // Months are 0-based in JS

            let select = document.getElementById(elementid);
            //select.name = "m";
            //select.id = "dateFilter";

            // Add "All dates" option
            let allOption = document.createElement("option");
            allOption.value = "";
            allOption.selected = true;
            allOption.textContent = "All dates";
            select.appendChild(allOption);

            // Generate options from startYear to currentYear
            for (let year = currentYear; year >= startYear; year--) {
                let startMonth = year === currentYear ? currentMonth : 12; // Ensure only past months are included for the current year
                for (let month = startMonth; month >= 1; month--) {
                    let option = document.createElement("option");
                    let monthValue = `${year}${month.toString().padStart(2, "0")}`;
                    option.value = monthValue;
                    option.textContent = new Date(year, month - 1).toLocaleString("en-US", {
                        month: "long",
                        year: "numeric",
                    });
                    select.appendChild(option);
                }
            }

            
        }
        $(document).ready(function () {
            generateDateFilter(2024, 'dateFilter');
           
            var table = $('#post_list_datatable').DataTable({
                "processing": true,
                "serverSide": true,
                searching: false,
                "ajax": {
                    "url": "@Url.Action("GetPostsData","Posts")",
                    "type": "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json", // Expect JSON response
                    "data": function (d) {
                        d.search.value = $('#post-search-input').val();
                        d.categoryId = $('#categoryFilter').val() || '';
                        d.rankMathFilter = $('#rankFilter').val() || '';
                        d.date = $('#dateFilter').val() || '';
                        return JSON.stringify(d);
                    }
                },
                columnDefs: [
                    { targets: 4, width: "150px" } // Adjust width for the "publishedDate" column (assuming it's the first column)
                ],
                "columns": [
                    {
                        "data": "id", "render": function (data) {
                            return `  <input id="${data}" type="checkbox" value="${data}" /> `;
                        }
                    },
                    // { "data": "featuredImage", "render": function (data) {
                    //         return `<img src="${data}" width="50">`;
                    //     }
                    // },
                    {
                        "data": "title", "render": function (val, colum, data) {
                            
                            return `<a href="#">${val}</a>
                                                    <div class="row-actions">
                                                        <span class="edit">
                                                                            <a href="/Posts/AddPost?post=${data.id}" aria-label="">Edit</a>
                                                            |
                                                        </span>
                                                        <span class="inline hide-if-no-js">
                             <button type="button" class="button-link editinline" aria-label=""
                                                                aria-expanded="false">
                                                                Quick&nbsp;Edit
                                                            </button> |
                                                        </span>
                                                        <span class="trash">
                                                            <a href="" class="submitdelete" aria-label="">
                                                                Trash
                                                            </a> |
                                                        </span>
                                                        <span class="view">
                                                            <a href="" rel="" aria-label="">Preview</a>
                                                        </span>
                                                    </div>`;
                        }
                    },
                    {
                        "data": "categories", "render": function (data) {
                            if (!Array.isArray(data) || data.length === 0) {
                                return "-"; // Show a placeholder if no categories exist
                            }
                            return data.map(category => `<span class="cat-bdge">${category}</span>`).join(" ");

                        }
                    },
                    { "data": "author" },
                    {
                        "data": "tags", "render": function (data) {
                            if (!Array.isArray(data) || data.length === 0) {
                                return "-"; // Show a placeholder if no categories exist
                            }
                            return data.map(tag => `<span class="tag-bdge">${tag}</span>`).join(" ");

                        }
                    },
                    {
                        "data": "status", "render": function (data) {
                            switch (data.toLowerCase()) {
                                case "publish":
                                    return '<span class="badge bg-success">Published</span>';
                                case "draft":
                                    return '<span class="badge bg-warning text-dark">Draft</span>';
                                case "inherit":
                                    return '<span class="badge bg-info">Inherited</span>';
                                case "trash":
                                    return '<span class="badge bg-danger">Trashed</span>';
                                default:
                                    return '<span class="badge bg-secondary">Unknown</span>'; // Handles 
                            }
                        }
                    },
                    {
                        "data": "publishedDate",
                        "render": function (data, type, row) {
                            if (!data) return ''; // Handle empty/null values

                            // Convert MySQL DateTime (YYYY-MM-DD HH:mm:ss) to JavaScript Date object
                            let date = new Date(data);

                            // Extract components
                            let year = date.getFullYear();
                            let month = (date.getMonth() + 1).toString().padStart(2, '0'); // Ensure two digits
                            let day = date.getDate().toString().padStart(2, '0');

                            let hours = date.getHours();
                            let minutes = date.getMinutes().toString().padStart(2, '0');
                            let ampm = hours >= 12 ? 'pm' : 'am';
                            hours = hours % 12 || 12; // Convert 24-hour format to 12-hour

                            // Format final output
                            return `Last Modified ${year}/${month}/${day} at ${hours}:${minutes} ${ampm}`;
                        }
                    },
                    {
                        "data": "id", "render": function (data) {
                            return ``;
                        }
                    },
                ]
            });
            $('#search-submit').on('click', function () {
                table.ajax.reload(null, false);
            });
            $('#filterButton').on('click', function () {
                table.ajax.reload(null, false);
            });
        });
    </script>
}